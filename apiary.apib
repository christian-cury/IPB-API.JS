FORMAT: 1A
HOST: https://api.mlppolska.pl


# IPB-API.JS
Hi! This is an official documentation of the IPB-API.JS used by Android (and more) apps. It features all basic functionality which is needed for comfortable using external applications.

# Group Basics
Current Version of API is **v1**, all requests dedicated for it must have */v1* in the URL.

Some requests needs Registration Key used for identificate you, it is 62 characters string generated by *Google Cloud Messaging* (If we're using Android) service or directly by API. 

## Example Request [/v1/members/getUser/{id}]

+ Parameters
    + id (required, number, `1`) ... ID of the user 

### Gets data about user [GET]
+ Request

    + Headers
    
            RegKey: <Your Registration Key>

+ Response 200 (application/json)

        {
            statusCode: 200,
            statusText: "OK",
            response: {
                "id": 1, "username": "Admin", ...
            }
        }
        
+ Response 403 (application/json)

        {
            statusCode: 403,
            statusText: "FORBIDDEN",
            response: "Permission Denied. Reason: Invalid Registration Key"
        }


# Group Notifications

## /v1/core/getNotifications/{just_unreaded}
### GET
Get 15 last notifications

+ Request

    + Headers
    
            RegKey: <Your Registration Key>
            
+ Parameters
    + just_unreaded (optional, number,  `0`) ... Get just unreaded notifications, default: 0 
            
+ Response 200 (application/json)

        {
            statusCode: 200,
            statusText: "OK",
            response: [
                {
                    notify_id: 1,
                    notify_text: "",
                    notify_to_id: 1337,
                    notify_from_id: 1234,
                    notify_type_key: "<eg. reply_any_status>",
                    notify_url: "<eg. http://mlppolska.pl/statuses/user/1337-...>",
                    notify_read: 1,
                    notify_sent: 1414951816
                }
            ]
        }
  
+ Response 403 (application/json)

        {
            statusCode: 403,
            statusText: "FORBIDDEN",
            response: "Permission Denied. Reason: Invalid Registration Key"
        }  `  


## /v1/core/getNotifications/markRead/{id}
### PUT
Mark notification as readed

+ Request

    + Headers
    
            RegKey: <Your Registration Key>
            
+ Parameters
    + id (required, number, `0`) ... ID of the notification
            
+ Response 200 (application/json)

        {
            statusCode: 200,
            statusText: "OK",
            response: [
                {
                    notify_id: 1,
                    notify_text: "",
                    notify_to_id: 1337,
                    notify_from_id: 1234,
                    notify_type_key: "<eg. reply_any_status>",
                    notify_url: "<eg. http://mlppolska.pl/statuses/user/1337-...>",
                    notify_read: 1,
                    notify_sent: 1414951816
                }
            ]
        }
  
+ Response 403 (application/json)

        {
            statusCode: 403,
            statusText: "FORBIDDEN",
            response: "Permission Denied. Reason: Invalid Registration Key"
        } 


# Group Messenger
Private messages module, with it you can send, read and delete your private messages.

## Get Private Message Thread [/v1/messenger/get/{id}/{withoutMessages}]

### Read Private message thread [GET]

+ Request

    + Headers
    
            RegKey: <Your Registration Key>
            
+ Parameters
    + id (required, number, `1`) ... ID of the message
    + withoutMessages (optional, number, `1`) ... With it, messages in thread won't be added into response, default: 0
            
+ Response 200 (application/json)

        {
            statusCode: 200,
            statusText: "OK",
            response: [
                {
                    
                    mt_id: 1
                    mt_date: 1366052931,
                    mt_title: "Thread Title",
                    mt_hasattach: "<true/false>"
                    mt_starter_id: 1337,
                    mt_start_time: 1366052931,
                    mt_last_post_time: 1366052931,
                    mt_invited_members: "a:0:{}"
                    mt_to_count: 1,
                    mt_to_member_id: 1234,
                    mt_replies: 10,
                    mt_last_msg_id: 1234,
                    mt_first_msg_id: 1337,
                    mt_messages: [
                        {
                            msg_id: 1
                            msg_date: 1366052931,
                            msg_post: "Post Message",
                            msg_author_id: 1337,
                            msg_ip_address: "<IP Address or null if user has not permissions>",
                            msg_is_first_post: "<1 or 0>"
                        }
                    ]
                }
            ]
        }
        
+ Response 200 (application/json)

        {
            statusCode: 200,
            statusText: "OK",
            response: [
                {
                    
                    mt_id: 1
                    mt_date: 1366052931,
                    mt_title: "Thread Title",
                    mt_hasattach: "<true/false>"
                    mt_starter_id: 1337,
                    mt_start_time: 1366052931,
                    mt_last_post_time: 1366052931,
                    mt_invited_members: "a:0:{}"
                    mt_to_count: 1,
                    mt_to_member_id: 1234,
                    mt_replies: 10,
                    mt_last_msg_id: 1234,
                    mt_first_msg_id: 1337
                }
            ]
        }
  
+ Response 403 (application/json)

        {
            statusCode: 403,
            statusText: "FORBIDDEN",
            response: "Permission Denied. Reason: <eg. Invalid Registration Key>"
        } 


### Send new post into thread [PUT]

+ Request

    + Headers
    
            RegKey: <Your Registration Key>
            
    + Body
        
            {
                post_message: "My Post Message, BBCode is allowed.\n\n New lines also, of course."
            }
            
+ Parameters
    + id (required, number, `1`) ... ID of the message
    + withoutMessages (optional, number, `1`) ... Unused in PUT Method, will be ignored
            
+ Response 200 (application/json)

        {
            statusCode: 200,
            statusText: "OK",
            response: "New Post has been added"
        }
        
+ Response 403 (application/json)

        {
            statusCode: 403,
            statusText: "FORBIDDEN",
            response: "Permission Denied. Reason: <eg. Invalid Registration Key>."
        } 
        
+ Response 404 (application/json)

        {
            statusCode: 404,
            statusText: "NOT_FOUND",
            response: "Cannot find current thread."
        } 

+ Response 404 (application/json)

        {
            statusCode: 404,
            statusText: "NOT_FOUND",
            response: "Cannot find current thread."
        } 

### Delete thread [DELETE]

+ Request

    + Headers
    
            RegKey: <Your Registration Key>
            
+ Parameters
    + id (required, number, `1`) ... ID of the message
    + withoutMessages (optional, number, `1`) ... Unused in DELETE Method, will be ignored
            
+ Response 200 (application/json)

        {
            statusCode: 200,
            statusText: "OK",
            response: "Thread has been deleted"
        }
        
+ Response 403 (application/json)

        {
            statusCode: 403,
            statusText: "FORBIDDEN",
            response: "Permission Denied. Reason: <eg. Invalid Registration Key>."
        } 

+ Response 404 (application/json)

        {
            statusCode: 404,
            statusText: "NOT_FOUND",
            response: "Cannot find current thread."
        } 

